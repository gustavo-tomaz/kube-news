# Deployment do Postgree
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgre
spec:
  selector:
    matchLabels:
      app: postgre
  template:
    metadata:
      labels:
        app: postgre
    spec:
      containers:
        - name: postgre
          image: postgres:14.3
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_PASSWORD
            value: "kube#123"
          - name: POSTGRES_USER
            value: "kubenews"
          - name: POSTGRES_DB
            value: "kubenews"
---
# Criar o Services
apiVersion: v1
kind: Service
metadata:
  name: postgre
spec:
  selector:
    app: postgre
  ports:
  - port: 5432
    targetPort: 5432
---
# Deployment da app Kube News
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubenews
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: kubenews
  template:
    metadata:
      labels:
        app: kubenews
      annotations:        # Como eu quero que o Prometheus colete as métricas do meu Pod da app, a annotation tem que ficar dentro da estrutura do Pod da app.
        prometheus.io/scrape: "true"  # Pra dizer que eu quero que faça o scrape desse Pod
        prometheus.io/port: "8080"    # especificar a porta do endpoint, que no caso é 8080
        prometheus.io/path: "/metrics"      # especificar o path de onde está o endpoint de coleta de metricas. Por padrão ele já pega o /metrics.
    spec:     #Especificação dos containers no Pod
      containers:
      - name: kubenews
        image: gustavotomaz/kube-news:v2
        env:
        - name: DB_DATABASE
          value: "kubenews"
        - name: DB_USERNAME
          value: "kubenews"
        - name: DB_PASSWORD
          value: "kube#123"
        - name: DB_HOST
          value: "postgre"  # O valor do DB_HOST é o name definido no Service, no caso é postgre
---
# Expor o Pod criando o Services da applicação
apiVersion: v1
kind: Service
metadata:
  name: kubenews
spec:
  selector:
    app: kubenews
  ports:
  - port: 80
    targetPort: 8080    # Redirecionar para o target port da app
    nodePort: 30000   # Porta 30000 especificada no k3d através do port bind no load balancer
  type: LoadBalancer
